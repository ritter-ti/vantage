trigger:
- main
- develop
- feature/*
- release/*
- hotfix/*

variables:
  buildConfiguration: 'Release'

stages:
- stage: 'Build'
  displayName: 'Build'
  jobs: 
  - job: 'Build'
    displayName: 'Build job'
    pool:
      vmImage: 'ubuntu-latest'

    variables:
      dotnetSdkVersion: '8.x'

    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET SDK $(dotnetSdkVersion)'
      inputs:
        version: '$(dotnetSdkVersion)'

    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: 'build'
        projects: 'Goal.sln'
        arguments: '--configuration $(buildConfiguration)'

- stage: 'CodeAnalisys'
  displayName: 'Code analisys'
  jobs: 
  - job: 'CodeAnalisys'
    displayName: 'Code analisys job'
    pool:
      vmImage: 'ubuntu-latest'

    variables:
      dotnetSdkVersion: '8.x'

    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET SDK $(dotnetSdkVersion)'
      inputs:
        version: '$(dotnetSdkVersion)'

    - task: SonarCloudPrepare@1
      displayName: 'SonarCloud Prepare'
      inputs:
        SonarCloud: 'SonarCloud'
        organization: 'aritters'
        scannerMode: 'MSBuild'
        projectKey: 'ritter-ti_goal'

    - task: DotNetCoreCLI@2
      displayName: Test
      inputs:
        command: 'test'
        projects: 'tests/**/*Tests.csproj'
        arguments: '--collect "Code Coverage"'
        publishTestResults: true

    - task: SonarCloudAnalyze@1

    - task: SonarCloudPublish@1
      inputs:
        pollingTimeoutSec: '300'

    - task: PublishCodeCoverageResults@1
      displayName: 'Publish code coverage report'
      inputs:
        codeCoverageTool: 'Cobertura'
        summaryFileLocation: '$(Agent.TempDirectory)/**/*cobertura.xml'

- stage: 'Deploy'
  displayName: 'Deploy'
  jobs:
  - job: 'Deploy'
    displayName: 'Deploy job'
    pool:
      vmImage: 'ubuntu-latest'

    variables:
      dotnetSdkVersion: '8.x'

    steps:
    - task: DotNetCoreCLI@2
      displayName: Generate Goal Packages
      inputs:
        command: 'pack'
        packagesToPack: '**/*.csproj'

    - task: PublishBuildArtifacts@1
      displayName: Publish Artifacts
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'